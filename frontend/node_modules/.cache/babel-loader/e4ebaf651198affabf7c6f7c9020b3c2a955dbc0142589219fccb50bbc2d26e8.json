{"ast":null,"code":"const protectedDayOfYearTokens = [\"D\", \"DD\"];\nconst protectedWeekYearTokens = [\"YY\", \"YYYY\"];\nexport function isProtectedDayOfYearToken(token) {\n  return protectedDayOfYearTokens.indexOf(token) !== -1;\n}\nexport function isProtectedWeekYearToken(token) {\n  return protectedWeekYearTokens.indexOf(token) !== -1;\n}\nexport function throwProtectedError(token, format, input) {\n  if (token === \"YYYY\") {\n    throw new RangeError(\"Use `yyyy` instead of `YYYY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\"));\n  } else if (token === \"YY\") {\n    throw new RangeError(\"Use `yy` instead of `YY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\"));\n  } else if (token === \"D\") {\n    throw new RangeError(\"Use `d` instead of `D` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\"));\n  } else if (token === \"DD\") {\n    throw new RangeError(\"Use `dd` instead of `DD` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\"));\n  }\n}","map":{"version":3,"names":["protectedDayOfYearTokens","protectedWeekYearTokens","isProtectedDayOfYearToken","token","indexOf","isProtectedWeekYearToken","throwProtectedError","format","input","RangeError","concat"],"sources":["C:/Users/unili/Desktop/Task 4/frontend/node_modules/date-fns/_lib/protectedTokens.mjs"],"sourcesContent":["const protectedDayOfYearTokens = [\"D\", \"DD\"];\nconst protectedWeekYearTokens = [\"YY\", \"YYYY\"];\n\nexport function isProtectedDayOfYearToken(token) {\n  return protectedDayOfYearTokens.indexOf(token) !== -1;\n}\n\nexport function isProtectedWeekYearToken(token) {\n  return protectedWeekYearTokens.indexOf(token) !== -1;\n}\n\nexport function throwProtectedError(token, format, input) {\n  if (token === \"YYYY\") {\n    throw new RangeError(\n      `Use \\`yyyy\\` instead of \\`YYYY\\` (in \\`${format}\\`) for formatting years to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`,\n    );\n  } else if (token === \"YY\") {\n    throw new RangeError(\n      `Use \\`yy\\` instead of \\`YY\\` (in \\`${format}\\`) for formatting years to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`,\n    );\n  } else if (token === \"D\") {\n    throw new RangeError(\n      `Use \\`d\\` instead of \\`D\\` (in \\`${format}\\`) for formatting days of the month to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`,\n    );\n  } else if (token === \"DD\") {\n    throw new RangeError(\n      `Use \\`dd\\` instead of \\`DD\\` (in \\`${format}\\`) for formatting days of the month to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`,\n    );\n  }\n}\n"],"mappings":"AAAA,MAAMA,wBAAwB,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC;AAC5C,MAAMC,uBAAuB,GAAG,CAAC,IAAI,EAAE,MAAM,CAAC;AAE9C,OAAO,SAASC,yBAAyBA,CAACC,KAAK,EAAE;EAC/C,OAAOH,wBAAwB,CAACI,OAAO,CAACD,KAAK,CAAC,KAAK,CAAC,CAAC;AACvD;AAEA,OAAO,SAASE,wBAAwBA,CAACF,KAAK,EAAE;EAC9C,OAAOF,uBAAuB,CAACG,OAAO,CAACD,KAAK,CAAC,KAAK,CAAC,CAAC;AACtD;AAEA,OAAO,SAASG,mBAAmBA,CAACH,KAAK,EAAEI,MAAM,EAAEC,KAAK,EAAE;EACxD,IAAIL,KAAK,KAAK,MAAM,EAAE;IACpB,MAAM,IAAIM,UAAU,sCAAAC,MAAA,CACwBH,MAAM,4CAAAG,MAAA,CAA2CF,KAAK,mFAClG,CAAC;EACH,CAAC,MAAM,IAAIL,KAAK,KAAK,IAAI,EAAE;IACzB,MAAM,IAAIM,UAAU,kCAAAC,MAAA,CACoBH,MAAM,4CAAAG,MAAA,CAA2CF,KAAK,mFAC9F,CAAC;EACH,CAAC,MAAM,IAAIL,KAAK,KAAK,GAAG,EAAE;IACxB,MAAM,IAAIM,UAAU,gCAAAC,MAAA,CACkBH,MAAM,wDAAAG,MAAA,CAAuDF,KAAK,mFACxG,CAAC;EACH,CAAC,MAAM,IAAIL,KAAK,KAAK,IAAI,EAAE;IACzB,MAAM,IAAIM,UAAU,kCAAAC,MAAA,CACoBH,MAAM,wDAAAG,MAAA,CAAuDF,KAAK,mFAC1G,CAAC;EACH;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}