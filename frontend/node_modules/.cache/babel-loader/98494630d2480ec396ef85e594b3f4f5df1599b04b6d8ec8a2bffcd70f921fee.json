{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\unili\\\\Desktop\\\\Task 4\\\\frontend\\\\src\\\\components\\\\UsersDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n\n// Table\nimport { useMemo } from 'react';\nimport { useTable } from 'react-table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UsersDetails = ({\n  users\n}) => {\n  _s();\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const handleCheckboxChange = row => {\n    if (row.original.check) {\n      // Checkbox is checked, add user to selectedUsers array\n      setSelectedUsers(prevSelectedUsers => [...prevSelectedUsers, row.original]);\n    } else {\n      // Checkbox is unchecked, remove user from selectedUsers array\n      setSelectedUsers(prevSelectedUsers => prevSelectedUsers.filter(user => user !== row.original));\n    }\n    console.log(selectedUsers);\n  };\n  const COLUMNS = [{\n    Header: \"Check\",\n    accessor: \"check\",\n    // Add a virtual accessor for the check column\n    Cell: ({\n      row\n    }) => /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: row.original.check,\n      readOnly: true,\n      onChange: () => handleCheckboxChange(row)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 15\n    }, this)\n  }, {\n    Header: \"Name\",\n    accessor: \"fullname\"\n  }, {\n    Header: \"Position\",\n    accessor: \"position\"\n  }, {\n    Header: \"e-Mail\",\n    accessor: \"email\"\n  }, {\n    Header: \"Last login\",\n    accessor: \"lastlogin\"\n  }, {\n    Header: \"Status\",\n    accessor: \"status\"\n  }];\n  const columns = useMemo(() => COLUMNS, []);\n  const data = useMemo(() => users, []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        ...getTableProps(),\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n            ...headerGroup.getHeaderGroupProps(),\n            children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n              ...column.getHeaderProps(),\n              children: column.render(\"Header\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          ...getTableBodyProps(),\n          children: rows.map(row => {\n            prepareRow(row);\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              ...row.getRowProps(),\n              children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n                ...cell.getCellProps(),\n                children: [\" \", cell.render(\"Cell\"), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n_s(UsersDetails, \"AiQ8B/4zGYu8HFh00K2RJQUMBAA=\", false, function () {\n  return [useTable];\n});\n_c = UsersDetails;\nexport default UsersDetails;\nvar _c;\n$RefreshReg$(_c, \"UsersDetails\");","map":{"version":3,"names":["React","useState","useMemo","useTable","jsxDEV","_jsxDEV","UsersDetails","users","_s","selectedUsers","setSelectedUsers","handleCheckboxChange","row","original","check","prevSelectedUsers","filter","user","console","log","COLUMNS","Header","accessor","Cell","type","checked","readOnly","onChange","fileName","_jsxFileName","lineNumber","columnNumber","columns","data","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","className","children","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","getRowProps","cells","cell","getCellProps","_c","$RefreshReg$"],"sources":["C:/Users/unili/Desktop/Task 4/frontend/src/components/UsersDetails.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\n// Table\r\nimport { useMemo } from 'react';\r\nimport { useTable } from 'react-table';\r\n\r\n\r\nconst UsersDetails = ({users}) => {\r\n    const [selectedUsers, setSelectedUsers] = useState([]);\r\n\r\n    const handleCheckboxChange = (row) => {\r\n        if (row.original.check) {\r\n        // Checkbox is checked, add user to selectedUsers array\r\n        setSelectedUsers((prevSelectedUsers) => [...prevSelectedUsers, row.original]);\r\n        } else {\r\n        // Checkbox is unchecked, remove user from selectedUsers array\r\n        setSelectedUsers((prevSelectedUsers) =>\r\n            prevSelectedUsers.filter((user) => user !== row.original)\r\n        );\r\n        }\r\n        console.log(selectedUsers);\r\n    };\r\n\r\n    const COLUMNS = [\r\n        {\r\n            Header: \"Check\",\r\n            accessor: \"check\", // Add a virtual accessor for the check column\r\n            Cell: ({ row }) => (\r\n              <input type=\"checkbox\" checked={row.original.check} readOnly \r\n              onChange={() => handleCheckboxChange(row)}\r\n              />\r\n            ),\r\n        },\r\n        {\r\n           Header: \"Name\",\r\n           accessor: \"fullname\"\r\n        },\r\n        {\r\n           Header: \"Position\",\r\n           accessor: \"position\"\r\n        },\r\n        {\r\n           Header: \"e-Mail\",\r\n           accessor: \"email\"\r\n        },\r\n        {\r\n           Header: \"Last login\",\r\n           accessor: \"lastlogin\"\r\n        },\r\n        {\r\n           Header: \"Status\",\r\n           accessor: \"status\"\r\n        }\r\n    ];\r\n\r\n    const columns = useMemo(()=> COLUMNS, []);\r\n    const data = useMemo(()=> users, []);\r\n\r\n    const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\r\n    useTable({ columns, data });\r\n\r\n    return (\r\n        <div className=\"App\">\r\n          <div className=\"container\">\r\n            <table {...getTableProps()}>\r\n              <thead>\r\n                {headerGroups.map((headerGroup) => (\r\n                  <tr {...headerGroup.getHeaderGroupProps()}>\r\n                    {headerGroup.headers.map((column) => (\r\n                      <th {...column.getHeaderProps()}>\r\n                        {column.render(\"Header\")}\r\n                      </th>\r\n                    ))}\r\n                  </tr>\r\n                ))}\r\n              </thead>\r\n              <tbody {...getTableBodyProps()}>\r\n                {rows.map((row) => {\r\n                  prepareRow(row);\r\n                  return (\r\n                    <tr {...row.getRowProps()}>\r\n                      {row.cells.map((cell) => (\r\n                        <td {...cell.getCellProps()}> {cell.render(\"Cell\")} </td>\r\n                      ))}\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      );\r\n}\r\n \r\nexport default UsersDetails;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}