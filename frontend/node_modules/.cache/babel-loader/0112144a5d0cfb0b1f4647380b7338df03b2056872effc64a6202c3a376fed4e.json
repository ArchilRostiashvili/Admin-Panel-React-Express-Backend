{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\unili\\\\Desktop\\\\Task 4\\\\frontend\\\\src\\\\components\\\\UsersDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from \"react\";\nimport { useTable, useRowSelect } from \"react-table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UsersDetails = ({\n  users\n}) => {\n  _s();\n  const COLUMNS = [{\n    Header: \"Name\",\n    accessor: \"fullname\"\n  }, {\n    Header: \"Position\",\n    accessor: \"position\"\n  }, {\n    Header: \"e-Mail\",\n    accessor: \"email\"\n  }, {\n    Header: \"Last login\",\n    accessor: \"lastlogin\"\n  }, {\n    Header: \"Status\",\n    accessor: \"status\"\n  }];\n  const columns = useMemo(() => COLUMNS, []);\n  const data = useMemo(() => users, []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    selectedFlatRows\n  } = useTable({\n    columns,\n    data\n  }, useRowSelect);\n\n  // Access array of all selected users\n  const selectedUsers = selectedFlatRows.map(row => row.original);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      ...getTableProps(),\n      style: {\n        borderCollapse: \"collapse\",\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n            ...column.getHeaderProps(),\n            style: {\n              borderBottom: \"2px solid #ddd\",\n              padding: \"8px\"\n            },\n            children: column.render(\"Header\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        ...getTableBodyProps(),\n        children: rows.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            ...row.getRowProps(),\n            children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n              ...cell.getCellProps(),\n              style: {\n                borderBottom: \"1px solid #ddd\",\n                padding: \"8px\"\n              },\n              children: cell.column.Header === \"Name\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                ...row.getToggleRowSelectedProps()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 23\n              }, this) : cell.render(\"Cell\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Selected Users:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: selectedUsers.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: user.fullname\n        }, user.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(UsersDetails, \"zT9aWI8R+2J2fqSLkig74ovkq9A=\", false, function () {\n  return [useTable];\n});\n_c = UsersDetails;\nexport default UsersDetails;\nvar _c;\n$RefreshReg$(_c, \"UsersDetails\");","map":{"version":3,"names":["React","useMemo","useTable","useRowSelect","jsxDEV","_jsxDEV","Fragment","_Fragment","UsersDetails","users","_s","COLUMNS","Header","accessor","columns","data","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","selectedFlatRows","selectedUsers","map","row","original","children","style","borderCollapse","width","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","borderBottom","padding","render","fileName","_jsxFileName","lineNumber","columnNumber","getRowProps","cells","cell","getCellProps","type","getToggleRowSelectedProps","marginTop","user","fullname","id","_c","$RefreshReg$"],"sources":["C:/Users/unili/Desktop/Task 4/frontend/src/components/UsersDetails.js"],"sourcesContent":["import React, { useMemo } from \"react\";\r\nimport { useTable, useRowSelect } from \"react-table\";\r\n\r\nconst UsersDetails = ({ users }) => {\r\n  const COLUMNS = [\r\n    {\r\n      Header: \"Name\",\r\n      accessor: \"fullname\",\r\n    },\r\n    {\r\n      Header: \"Position\",\r\n      accessor: \"position\",\r\n    },\r\n    {\r\n      Header: \"e-Mail\",\r\n      accessor: \"email\",\r\n    },\r\n    {\r\n      Header: \"Last login\",\r\n      accessor: \"lastlogin\",\r\n    },\r\n    {\r\n      Header: \"Status\",\r\n      accessor: \"status\",\r\n    },\r\n  ];\r\n\r\n  const columns = useMemo(() => COLUMNS, []);\r\n  const data = useMemo(() => users, []);\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n    selectedFlatRows,\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n    },\r\n    useRowSelect\r\n  );\r\n\r\n  // Access array of all selected users\r\n  const selectedUsers = selectedFlatRows.map((row) => row.original);\r\n\r\n  return (\r\n    <>\r\n      <table {...getTableProps()} style={{ borderCollapse: \"collapse\", width: \"100%\" }}>\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps()} style={{ borderBottom: \"2px solid #ddd\", padding: \"8px\" }}>\r\n                  {column.render(\"Header\")}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => (\r\n                  <td {...cell.getCellProps()} style={{ borderBottom: \"1px solid #ddd\", padding: \"8px\" }}>\r\n                    {cell.column.Header === \"Name\" ? (\r\n                      <input type=\"checkbox\" {...row.getToggleRowSelectedProps()} />\r\n                    ) : (\r\n                      cell.render(\"Cell\")\r\n                    )}\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n\r\n      <div style={{ marginTop: \"20px\" }}>\r\n        <h3>Selected Users:</h3>\r\n        <ul>\r\n          {selectedUsers.map((user) => (\r\n            <li key={user.id}>{user.fullname}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UsersDetails;\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}